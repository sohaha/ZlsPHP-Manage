<?php

namespace Controller;

use Business\ZlsManage\AuthBusiness;
use Business\ZlsManage\UserBusiness;
use Z;

/**
 * Class ZlsManage
 * @package Controller
 */
class ZlsManage extends \Zls_Controller
{
    public function zIndex()
    {
        Z::redirect('/ZlsManage/index.html');
    }

    protected $USER;
    /** @var \Business\ZlsManage\UserBusiness $UserBusiness */
    protected $UserBusiness;

    public function before($method, $controllerShort, $args, $controller)
    {
        $AuthBusiness       = new AuthBusiness();
        $router             = str_replace('_', '/', z::strCamel2Snake(str_replace('\\', '/', $controllerShort) . '/' . $method, ''));
        $this->UserBusiness = new UserBusiness;
        if (!in_array($router, ['zlsmanage/userapi/gettoken'])) {
            $token      = $this->getToken();
            $this->USER = $this->UserBusiness->tokenToInfo($token);
            if (!$this->USER) {
                return [401, '请先登录'];
            }
            // 是否超级管理员
            $this->USER['isSuper'] = $this->UserBusiness->isSuperAdmin($this->USER['id']);
            // 只要登录就就要开放的权限
            $noVerification = ['zlsmanage/userapi/useriinfo', 'zlsmanage/systemapi/unreadmessagecount', 'zlsmanage/userapi/cleartoken'];
            // 'ZlsManage/UserApi/UseriInfo/
            if (!$this->USER['isSuper'] && !in_array($router, $noVerification)) {
                $auth = $AuthBusiness->userAuth($this->USER['group_id'], $router);
                if ($auth !== true) {
                    return [403, '对不起，权限不足', $auth];
                }
            }
        }

        return null;
    }

    final protected function getToken()
    {
        return z::server('HTTP_TOKEN') ?: z::getPost('token');
    }

    final public function getInfo($key = null)
    {
        return $key ? z::arrayGet($this->USER, $key) : $this->USER;
    }

    public function after($contents, $methodName, $controllerShort, $args, $controller)
    {
        return is_array($contents) ? Z::json($contents) : Z::json(211, $contents);
    }

    public function call($method, $controllerShort, $args, $controller)
    {
        return [404, '此路不通'];
    }
}
